<?php
namespace Heartsentwined\Test\Url;

use Heartsentwined\Url\Url;

class UrlTest extends \PHPUnit_Framework_TestCase
{
    public function testToAbsolute()
    {
        // Fail on unparsable relative URL
        $this->assertFalse(Url::toAbsolute(
            'http://example.com/path?bq#bf',
            'bad://\slash.com/brac[kets]'));

        // Relative URL has scheme, only remove dots from path if hierarchical
        $this->assertSame('http://whatever.com/path/here?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'http://whatever.com/path/./here?rq#rf')));
        $this->assertSame('http://whatever.com/here?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'http://whatever.com/path/../here?rq#rf')));
        $this->assertSame('mailto:user@example.com?subject=hi',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'mailto:user@example.com?subject=hi')));
        $this->assertSame('mailto:user@whatever.com',
            rawurldecode(Url::toAbsolute(
                'mailto:bob@example.com',
                'mailto:user@whatever.com')));
        $this->assertSame('mailto:user/../whatever.com',
            rawurldecode(Url::toAbsolute(
                'mailto:bob@example.com',
                'mailto:user/../whatever.com')));

        // Fail on unparsable base URL
        $this->assertFalse(Url::toAbsolute(
            'bad://\slash.com/brac[kets]',
            '/path/./here?rq#rf'));

        // Fail on non-absolute base URL missing scheme or host
        $this->assertFalse(Url::toAbsolute(
            '//example.com/path?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            '///path?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            '/path?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            'http:/path?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            'path?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            'http:path?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            '?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            'http:?bq#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            '#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            'http:#bf',
            '/path/./here?rq#rf'));
        $this->assertFalse(Url::toAbsolute(
            'mailto:user@example.com',
            '/path'));
        $this->assertFalse(Url::toAbsolute(
            'mailto:user@example.com',
            '//whatever.com/path'));

        // Relative URL has authority, fill in scheme and remove dots from path
        $this->assertSame('http://whatever.com',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//whatever.com')));
        $this->assertSame('http://127.0.0.1',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//127.0.0.1')));
        $this->assertSame('http://whatever.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//whatever.com/')));
        $this->assertSame('http://127.0.0.1/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//127.0.0.1/')));
        $this->assertSame('http://whatever.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//whatever.com/rpath')));
        $this->assertSame('http://whatever.com/rpath/?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//whatever.com/rpath/?rq#rf')));
        $this->assertSame('http://',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '//')));
        $this->assertSame('http:///rpath/?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '///rpath/?rq#rf')));
        $this->assertSame('http:///?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '///?rq#rf')));

        // Relative URL has absolute path but no scheme or authority, so fill in both and remove dots from path
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/.')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/..')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath')));
        $this->assertSame('http://example.com/rpath/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/.')));
        $this->assertSame('http://example.com/rpath/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/./')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/../')));
        $this->assertSame('http://example.com/here',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/../here')));
        $this->assertSame('http://example.com/rpath/?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/?rq#rf')));
        $this->assertSame('http://example.com/?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '/rpath/..?rq#rf')));

        // Relative URL has no scheme, authority, or path, so fill in (only case where base query is copied)
    $this->assertSame('http://example.com/path?rq#rf',
        rawurldecode(Url::toAbsolute(
            'http://example.com/path?bq#bf',
            '?rq#rf')));
        $this->assertSame('http://example.com/path?#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '?#rf')));
        $this->assertSame('http://example.com/path?#',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '?#')));
        $this->assertSame('http://example.com/path?',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '?')));
        $this->assertSame('http://example.com/path?bq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '#rf')));
        $this->assertSame('http://example.com/path?bq#',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '#')));

        // Relative URL has relative path, so merge paths and remove dots from path
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com',
                'rpath')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/',
                'rpath')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/?bq#bf',
                'rpath')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                'rpath')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'rpath')));
        $this->assertSame('http://example.com/rpath/here',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'rpath/here')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'rpath/..')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                '..')));
        $this->assertSame('http://example.com/rpath/here#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'rpath/here#rf')));
        $this->assertSame('http://example.com/rpath/here?rq',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'rpath/here?rq')));
        $this->assertSame('http://example.com/rpath/here?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path?bq#bf',
                'rpath/here?rq#rf')));
        $this->assertSame('http://example.com/path/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/base',
                'rpath')));
        $this->assertSame('http://example.com/path/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/?bq#bf',
                'rpath')));
        $this->assertSame('http://example.com/path/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/base?bq#bf',
                'rpath')));
        $this->assertSame('http://example.com/path/rpath/here',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/base?bq#bf',
                'rpath/here')));
        $this->assertSame('http://example.com/path/rpath/here?rq#rf',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/base?bq#bf',
                'rpath/here?rq#rf')));
        $this->assertSame('http://example.com/path/base/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/base/..',
                'rpath')));
        $this->assertSame('http://example.com/path/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/base/../',
                'rpath')));
        $this->assertSame('http://example.com/path/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/./base/../',
                'rpath')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/../base',
                'rpath')));
        $this->assertSame('http://example.com/base/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/../base/..',
                'rpath')));
        $this->assertSame('http://example.com/rpath',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path/../base/../',
                'rpath')));

        // Remove single dots in path
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '.')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/.')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/./')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/./.')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/././')));
        $this->assertSame('http://example.com/a/b',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/a/./b/.')));
        $this->assertSame('http://example.com/a/b/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/a/./b/./')));
        $this->assertSame('http://example.com/b/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '././b/./')));

        // Remove previous segment on double dots in path
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '..')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/..')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/../')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '../')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '../../')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '../../..')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                'a/../../../')));
        $this->assertSame('http://example.com/',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/a/../../../')));
        $this->assertSame('http://example.com/a/g',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                '/a/b/c/./../../g')));
        $this->assertSame('http://example.com/mid/6',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                'mid/content=5/../6')));

        // Do nothing to tripple dots in path
        $this->assertSame('http://example.com/blah/.../foo',
            rawurldecode(Url::toAbsolute(
                'http://example.com/path',
                'blah/.../foo')));
    }
}
